pipeline {
    agent any

    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
        DOCKER_HUB_USER = 'your-dockerhub-username'
        GIT_CREDENTIALS = 'f87a34a8-0e09-45e7-b9cf-6dc68feac670'
        GIT_REPO = 'https://github.com/your-repo-url.git'
        K8S_MANIFEST_REPO = 'https://github.com/your-k8s-manifests-repo.git'
        GIT_BRANCH = 'main'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git credentialsId: "${GIT_CREDENTIALS}", url: "${GIT_REPO}", branch: "${GIT_BRANCH}"
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    def services = [
                        'authentication-service',
                        'wallet-service',
                        'history-service',
                        'withdrawal-service',
                        'deposit-service',
                        'maintenance-service',
                        'blacklist-service',
                        'bank-collection-service',
                        'revenue-service',
                        'beneficiary-service'
                    ]
                    services.each { service ->
                        sh """
                        echo "Building Docker Image for ${service}"
                        docker build -t ${DOCKER_HUB_USER}/${service}:${IMAGE_TAG} ./${service}
                        """
                    }
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-creds', passwordVariable: 'DOCKER_HUB_PASSWORD', usernameVariable: 'DOCKER_HUB_USER')]) {
                        sh 'echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin'
                        def services = [
                            'authentication-service',
                            'wallet-service',
                            'history-service',
                            'withdrawal-service',
                            'deposit-service',
                            'maintenance-service',
                            'blacklist-service',
                            'bank-collection-service',
                            'revenue-service',
                            'beneficiary-service'
                        ]
                        services.each { service ->
                            sh "docker push ${DOCKER_HUB_USER}/${service}:${IMAGE_TAG}"
                        }
                    }
                }
            }
        }

        stage('Checkout K8S Manifest') {
            steps {
                git credentialsId: "${GIT_CREDENTIALS}", url: "${K8S_MANIFEST_REPO}", branch: "${GIT_BRANCH}"
            }
        }

        stage('Update K8S Manifest & Push to Repo') {
            steps {
                script {
                    def services = [
                        'authentication-service',
                        'wallet-service',
                        'history-service',
                        'withdrawal-service',
                        'deposit-service',
                        'maintenance-service',
                        'blacklist-service',
                        'bank-collection-service',
                        'revenue-service',
                        'beneficiary-service'
                    ]
                    services.each { service ->
                        withCredentials([usernamePassword(credentialsId: "${GIT_CREDENTIALS}", passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                            sh """
                            echo 'Updating the deploy.yaml for ${service}'
                            sed -i "s|${service}:latest|${DOCKER_HUB_USER}/${service}:${IMAGE_TAG}|g" deploy.yaml
                            git config --global user.email "jenkins@example.com"
                            git config --global user.name "Jenkins"
                            git add deploy.yaml
                            git commit -m 'Updated the deploy.yaml for ${service} | Jenkins Pipeline'
                            git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/your-k8s-manifests-repo.git HEAD:${GIT_BRANCH}
                            """
                        }
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh '''
                    echo "Deploying the latest services to Kubernetes"
                    kubectl apply -f deploy.yaml
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
            // Add notifications (e.g., Slack, email) here
        }
        failure {
            echo 'Pipeline failed!'
            // Add notifications (e.g., Slack, email) here
        }
    }
}